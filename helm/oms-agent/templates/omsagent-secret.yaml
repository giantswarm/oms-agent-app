{{- if and (ne .Values.omsagent.secret.key "<your_workspace_key>") (ne .Values.omsagent.secret.wsid "<your_workspace_id>") (or (ne .Values.omsagent.env.clusterName "<your_cluster_name>") (ne .Values.omsagent.env.clusterId "<your_cluster_id>") (ne .Values.Azure.Cluster.ResourceId "<your_cluster_id>") )}}
apiVersion: v1
kind: Secret
metadata:
  name: omsagent-secret
  namespace: {{ .Release.Namespace }}
  labels:
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
type: Opaque
data:
  WSID: {{ required "A valid workspace id is required!" .Values.omsagent.secret.wsid | b64enc | quote }}
  KEY: {{ required "A valid workspace key is required!" .Values.omsagent.secret.key | b64enc | quote }}
  DOMAIN: {{ .Values.omsagent.domain | b64enc | quote }}
  {{- $httpsProxyDict := urlParse .Values.Azure.proxySettings.httpsProxy  -}}
  {{- $httpProxyDict := urlParse .Values.Azure.proxySettings.httpProxy  -}}
  {{- if and (and (.Values.Azure.proxySettings.isProxyEnabled) (.Values.Azure.proxySettings.httpsProxy)) ($httpsProxyDict.userinfo) }} 
  PROXY: {{ .Values.Azure.proxySettings.httpsProxy | b64enc | quote }}
  {{- else if and (and (.Values.Azure.proxySettings.isProxyEnabled) (.Values.Azure.proxySettings.httpsProxy)) (empty $httpsProxyDict.userinfo) }}   
  # adding arbitrary creds since omsagent expects arbitrary creds in case of no auth
  PROXY: {{ urlJoin (dict "scheme" $httpsProxyDict.scheme "userinfo" "admin:secret"  "host"  $httpsProxyDict.host) | b64enc | quote }}
  {{- else if and (and (.Values.Azure.proxySettings.isProxyEnabled) (.Values.Azure.proxySettings.httpProxy)) ($httpProxyDict.userinfo) }}
  PROXY: {{ .Values.Azure.proxySettings.httpProxy | b64enc | quote }}
  {{- else if and (and (.Values.Azure.proxySettings.isProxyEnabled) (.Values.Azure.proxySettings.httpProxy)) (empty $httpProxyDict.userinfo) }} 
  # adding arbitrary creds since omsagent expects arbitrary creds in case of no auth
  PROXY: {{ urlJoin (dict "scheme" $httpProxyDict.scheme "userinfo" "admin:secret"  "host"  $httpProxyDict.host) | b64enc | quote }}
  {{- else if ne .Values.omsagent.proxy "<your_proxy_config>" }}
  PROXY: {{ .Values.omsagent.proxy | b64enc | quote }}
  {{- end }}
{{- end }}
